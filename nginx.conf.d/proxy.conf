# Proxy for Snap! to get around CORS and HTTP issues.
# Shamelessly based on:
# https://gist.github.com/tjvr/80b066b35930d6ee21bb4be2bcfe89c1
# https://gist.github.com/pauloricardomg/7084524
# This works **only** for *.berkeley.edu and *.cs10.org sites.

location ~* ^/cors/http(s?)\:\/(.*)$ {
    gzip on;
    gzip_types      text/plain application/xml;
    gzip_proxied    no-cache no-store private expired auth;
    gzip_min_length 1000;

    # use filtered(?) OpenDNS
    resolver 208.67.222.123;
    # I think bad domains will get 403 ?

    # Nginx doesn't support nested If statements, so we
    # concatenate compound conditions on the $cors variable
    # and process later
    set $final_url 'http$1://$2';

    # If request comes from allowed domains then we enable CORS
    set $allowed (https?://.*(snap\.berkeley\.edu|cs10\.org|localhost));
    if ($http_origin ~* ($allowed)) {
       set $cors "1";
    }


    # OPTIONS indicates a CORS pre-flight request
    if ($request_method = 'OPTIONS') {
       set $cors "${cors}o";
    }

    # CORS :-)
    # add_header Access-Control-Allow-Origin *;

    # Disable casual browswing
    # if ($http_origin = "") {
    #     return 412;
    # }

    # TODO redirect if CORS is already present
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Cookie '';
    proxy_pass $final_url;
    proxy_redirect off;

    # optimize downloads
    proxy_connect_timeout 30;
    proxy_send_timeout 15s;
    proxy_read_timeout 15s;
    proxy_max_temp_file_size 1m; # don't buffer responses to disk
    proxy_request_buffering off;

    # TODO limit download size

    # don't forward weird headers
    proxy_hide_header Access-Control-Allow-Origin;
    proxy_hide_header Set-Cookie;
    proxy_hide_header X-Frame-Options; # controversial!!
    proxy_hide_header X-XSS-Protection;

    # if ($sent_http_content_length ~ "[0-9]{7}") {
    #     return 403;
    # }
}